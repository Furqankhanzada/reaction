# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the trunk branch
  push:
    branches: [ trunk ]
  pull_request:
    branches: [ trunk ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
       
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          pwd
          ls
                
      - name: Deploy Production
        run: scp -r /home/runner/work/reaction/reaction/* bitnami@3.125.29.149:~/apis
      

      - name: Build and Run Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
            nvm use 14.11.0
            cd ~/apis
            export NODE_ENV=production
            export PORT=3000
            export MONGO_URL=${{ secrets.MONGO_URL }}
            export ROOT_URL=${{ secrets.ROOT_URL }}
            export STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }}
            export MAIL_URL=${{ secrets.MAIL_URL }}
            npm install --only=prod --ignore-scripts
            node -v
            nvm list
            pm2 delete "apis"
            pm2 start --name "apis" npm -- start
